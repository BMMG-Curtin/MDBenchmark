language: python
sudo: false
python: "3.6"

branches:
  only:
    - develop
    - master

cache:
  - pip: true
  - directories:
      - $PIP_CACHE_DIR

env:
  global:
    - MAIN_CMD="pytest"
    - SETUP_CMD="mdbenchmark -v"
    - PIP_CACHE_DIR=$HOME/.cache/pip
    - CODECOV=""
    - PYTEST_COV=""
    - UPGRADE_PIP="pip install --upgrade pip"

jobs:
  include:
    - stage: "Linux - Unit tests"
      name: "Python 3.6"
      env:
        - CODECOV="--cov mdbenchmark"
        - PYTEST_COV="pytest-cov codecov"
    - name: "Python 3.7"
      language: python
      python: 3.7
      dist: xenial
      sudo: true
    - name: "Python 3.5"
      python: "3.5"
    - name: "Python 2.7"
      python: "2.7"

    - stage: "Linting and formatting"
      name: "Formatting with black"
      install:
        - $UPGRADE_PIP
        - pip install black
      script: make reformat-check
    - name: "Linting with flake8"
      install:
        - $UPGRADE_PIP
        - pip install flake8
      script: make flake8
    - name: "Sorting with isort"
      install:
        - $UPGRADE_PIP
        - pip install isort
      script: make isort-check
    - name: "Lint reStructuredText"
      install:
        - $UPGRADE_PIP
        - pip install restructuredtext_lint
      script: make rst-lint
    - name: "Try to build documentation"
      install:
        - $UPGRADE_PIP
        - pip install . sphinx-click
      script: python setup.py build_sphinx

    - stage: "macOS - Unit tests"
      os: osx
      language: sh
      env:
        - TOXENV=py3
        - HOMEBREW_NO_INSTALL_CLEANUP=1
        - HOMEBREW_NO_ANALYTICS=1
      before_cache:
        # - brew cleanup
        - rm -f "$HOME/Library/Caches/pip/log/debug.log"
      cache:
        directories:
          # - "$HOME/Library/Caches/Homebrew"
          - "$HOME/Library/Caches/pip"
      addons:
        homebrew:
          # update: true
          packages: python3
      before_install:
        - python3 -m pip install --upgrade pip
        - python3 -m venv --system-site-packages "$HOME/venv"
        - source "$HOME/venv/bin/activate"
      install:
        - pip install -e .
        - pip install pytest-cov codecov
        - deactivate
        - source "$HOME/venv/bin/activate"
      script: python3 -m $MAIN_CMD $SETUP_CMD

install:
  - $UPGRADE_PIP
  - pip install . $PYTEST_COV

script:
  - pytest $CODECOV

after_success:
  - if [ -z ${CODECOV} ]; then echo "Skipping codecov submit"; else codecov; fi
